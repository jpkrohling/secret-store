<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015 Red Hat, Inc. and/or its affiliates
    and other contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.keycloak.secretstore</groupId>
        <artifactId>secret-store-parent</artifactId>
        <version>1.0.10.Final-SNAPSHOT</version>
    </parent>

    <artifactId>secret-store-feature-pack-resources</artifactId>
    <name>Secret Store - Feature Pack Resources</name>
    <description>
        This Maven module exists solely because wildfly-server-provisioning-maven-plugin is able to load the subsystem
        fragments (see src/main/resources/subsystem-templates/*) only from jars that are pulled by some WildFly module.
        Projects that have WildFly modules usually pack this kind of resources inside one of the modules' jars.
        Although we do not need a WildFly module to run any code, we need to have one just for the sake of loading the
        subsystem-templates by wildfly-server-provisioning-maven-plugin.
    </description>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
</project>